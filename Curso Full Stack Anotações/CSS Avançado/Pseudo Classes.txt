A diferença entre pseudo elemento para pseudo classes é que o class so usa 1 : e o outro usam 2 ::

para poder fazer com que voce escreva em uma input e fique com a cor diferente so quando voce escreve se usa o pseudo:focus ex:

input:focus{
	color: red;
}

se caso fizer uma lista com varias opçoes e voce queira so mudar algo do primeiro elemento se usa o first-child exemplo; mas para poder dá certo ele precisa ser realmente o primeiro, se caso
tiver alguma tag na frente ele deixa de ser o primeiro.

li:first-child{
	color: red;
}

para poder nao valer essa regra de cima utilizamos o first-of-type, assim mesmo que tenho algo na frente ele pega o primeiro exemplo:

li:first-of-type{
	color:red;
}
 e para poder usar outros da lista sem ser o primeiro usamos nth-child(numero da ordem) isso sendo da regra do child,exemplo:

li:nth-child(2){
	color:red;
}

para poder usar outros da lista sem ser o primeiro usamos nth-of-type(numero da ordem) isso sendo da regra do type, exemplo:

li:nth-of-type(3){
	color:red;
}

para poder usar outros da lista sendo de tras para frente usamos o nth-last-child(numero da ordem), isso sendo da regra do child, exemplo:

li:nth-last-child(2){
	color: red;
}

para poder usar outros da lista sendo de tras para frente usamos o nth-last-of-type(numero da ordem), isso sendo da regra do type, exemplo:

li:last-of-type{
	color: red;
}

para poder usar da lista que sejam impares nth-last-of-type(odd) e para pares usamos nth-last-of-type(even), exemplo:
li:nth-of-type(odd){
	color: red;
}
li:nth-of-type(even){
	color: red;
}


All CSS Pseudo Classes

Selector	Example	Example description

:active	a:active	Selects the active link

:checked	input:checked	Selects every checked <input> element

:disabled	input:disabled	Selects every disabled <input> element

:empty	p:empty	Selects every <p> element that has no children

:enabled	input:enabled	Selects every enabled <input> element

:first-child	p:first-child	Selects every <p> elements that is the first child of its parent

:first-of-type	p:first-of-type	Selects every <p> element that is the first <p> element of its parent

:focus	input:focus	Selects the <input> element that has focus

:hover	a:hover	Selects links on mouse over

:in-range	input:in-range	Selects <input> elements with a value within a specified range

:invalid	input:invalid	Selects all <input> elements with an invalid value

:lang(language)	p:lang(it)	Selects every <p> element with a lang attribute value starting with "it"

:last-child	p:last-child	Selects every <p> elements that is the last child of its parent

:last-of-type	p:last-of-type	Selects every <p> element that is the last <p> element of its parent

:link	a:link	Selects all unvisited links

:not(selector)	:not(p)	Selects every element that is not a <p> element

:nth-child(n)	p:nth-child(2)	Selects every <p> element that is the second child of its parent

:nth-last-child(n)	p:nth-last-child(2)	Selects every <p> element that is the second child of its parent, counting from the last child

:nth-last-of-type(n)	p:nth-last-of-type(2)	Selects every <p> element that is the second <p> element of its parent, counting from the last child

:nth-of-type(n)	p:nth-of-type(2)	Selects every <p> element that is the second <p> element of its parent

:only-of-type	p:only-of-type	Selects every <p> element that is the only <p> element of its parent

:only-child	p:only-child	Selects every <p> element that is the only child of its parent

:optional	input:optional	Selects <input> elements with no "required" attribute

:out-of-range	input:out-of-range	Selects <input> elements with a value outside a specified range

:read-only	input:read-only	Selects <input> elements with a "readonly" attribute specified

:read-write	input:read-write	Selects <input> elements with no "readonly" attribute

:required	input:required	Selects <input> elements with a "required" attribute specified

:root	root	Selects the document's root element

:target	#news:target	Selects the current active #news element (clicked on a URL containing that anchor name)

:valid	input:valid	Selects all <input> elements with a valid value

:visited	a:visited	Selects all visited links

All CSS Pseudo Elements

Selector	Example	Example description

::after	p::after	Insert content after every <p> element

::before	p::before	Insert content before every <p> element

::first-letter	p::first-letter	Selects the first letter of every <p> element

::first-line	p::first-line	Selects the first line of every <p> element

::selection	p::selection	Selects the portion of an element that is selected by a user